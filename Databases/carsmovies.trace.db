2025-05-04 23:44:31.124333Z jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Column "FLORESNAME" not found; SQL statement:
INSERT INTO FLORES_ENTITI (id, floresName, floresColor, tamano) VALUES ('b27c5501-1fbb-47cd-b02e-1cb0f34daae9', 'Rosa', 'Rojo', 'Mediano'), ('6f63127c-5609-4b58-957d-b1c2308df7f3', 'Tulipán', 'Amarillo', 'Pequeño'), ('9391e6f9-bd08-4179-b28f-d207a1a72e5f', 'Lirio', 'Blanco', 'Grande'), ('7cf94f57-1457-49fd-b95b-429197c66fbb', 'Girasol', 'Amarillo', 'Grande'), ('53d4fdfe-42ac-488b-9be7-b053c848b883', 'Orquídea', 'Morado', 'Pequeño'), ('fcd95399-7c68-4318-a63d-905727e91b83', 'Jazmín', 'Blanco', 'Mediano'), ('eb1717fa-3d28-4a97-9df2-d2b013d30d26', 'Clavel', 'Rojo', 'Mediano'), ('2200e0be-c575-4f9a-9448-9931c0784881', 'Violeta', 'Azul', 'Pequeño'), ('8030286f-31b7-44d5-99a7-b5221a11c2a3', 'Dalia', 'Rosa', 'Grande'), ('1b8a8cc1-58f0-43f4-94f4-c52d6802d0e2', 'Margarita', 'Blanco', 'Mediano'), ('7ffcd0c7-e0a1-46b8-946f-96b3adf85e8d', 'Amapola', 'Rojo', 'Pequeño'), ('9b5b8a74-50d5-490f-9bba-e1fe210cf063', 'Gerbera', 'Naranja', 'Mediano'), ('e839ec88-3271-4704-b240-b07eced92c1a', 'Magnolia', 'Blanco', 'Grande'), ('dc3a93c4-fecb-46fd-928b-d2f6ed3b62d1', 'Hibisco', 'Rojo', 'Grande'), ('a5ac28bc-c56f-49a7-87f5-9e70612b2782', 'Petunia', 'Violeta', 'Pequeño'), ('bcf17e93-f1c6-4974-bbfc-929820f63245', 'Azucena', 'Blanco', 'Grande'), ('7f9f8d12-9b98-42a5-bbba-fc6635f17a5e', 'Gardenia', 'Blanco', 'Mediano'), ('935d3b4b-c8e5-4e9f-8bc5-cbf16ff6fae5', 'Amarilis', 'Rojo', 'Mediano'), ('10cfe28b-9df7-40ad-a6b7-d4c56c268c94', 'Lentejuela', 'Rosa', 'Pequeño'), ('41398ad1-e631-47ac-bb7e-264cbf4c2a75', 'Crisantemo', 'Amarillo', 'Mediano'), ('35753a38-9f5b-4bde-b22e-dcb563e16bbf', 'Cempasúchil', 'Naranja', 'Mediano'), ('f3d4e763-2e30-4067-9503-68e2f87fa3cd', 'Anémona', 'Rosa', 'Pequeño'), ('ab2f6ec0-9539-4e52-b7a7-16f2c9c497db', 'Fresia', 'Amarillo', 'Pequeño'), ('a6887121-8d4a-4067-9f3a-ff0a9f7f6c75', 'Lupino', 'Morado', 'Grande'), ('7d22b500-73e1-42c6-a3e2-c7e055063590', 'Geranios', 'Rosa', 'Mediano'), ('eaf35b94-0a8a-4923-a5c5-447f365470e7', 'Flor de Cempasúchil', 'Naranja', 'Mediano'), ('9d13b149-96a3-42e7-9e90-b8f946698d77', 'Buganvilla', 'Fucsia', 'Grande'), ('348fa45f-bfd0-4fdd-8281-5d8772f8f8ad', 'Ranúnculo', 'Blanco', 'Mediano'), ('cb9f989e-4a76-4757-96ca-9c72eab19c5d', 'Poppy', 'Rojo', 'Pequeño'), ('1778ac7f-b869-4d5c-9790-77e8a6c30ff5', 'Narciso', 'Amarillo', 'Pequeño'), ('e5f03c5c-049a-4e8b-8e4c-ccd3a264f935', 'Ciclamen', 'Rosa', 'Mediano'), ('b32b0e44-cd86-4ac7-b5c0-2cce68ed4a6f', 'Malva', 'Violeta', 'Grande'), ('543d6c27-7599-4387-b5a9-8f3acfe3e2f4', 'Violeta africana', 'Morado', 'Pequeño'), ('e875a5d2-c977-416a-b9cf-d8f3213ed5e0', 'Lobelia', 'Azul', 'Pequeño'), ('b559e33c-050b-4a1c-bf79-b7f640c82c9e', 'Caléndula', 'Naranja', 'Pequeño'), ('19bb9b43-935b-48b2-9e0f-d06f7b4293db', 'Boca de dragón', 'Rosa', 'Mediano'), ('26b31787-929b-4191-9b8d-d66d04b698d9', 'Helecho', 'Verde', 'Grande'), ('8b611c42-5473-4bbf-b8a1-6c1b4697e5d9', 'Euforbia', 'Verde', 'Mediano'), ('d3cc2896-2297-4bc5-ae0f-cf5efb62539c', 'Campanula', 'Azul', 'Pequeño'), ('c09e4211-ef4c-465b-a3b3-272f0c056831', 'Zinnia', 'Amarillo', 'Mediano'), ('f702c585-bc4a-4e67-b2ea-e0efb4db67a6', 'Bellis', 'Blanco', 'Pequeño'), ('b20ae9c1-9c7d-44a6-800a-083e929a451d', 'Alhelí', 'Blanco', 'Mediano'), ('79590fd8-7fa5-433b-9830-1f1f6a682be0', 'Impatiens', 'Rojo', 'Pequeño') [42122-232]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.table.Table.getColumn(Table.java:786)
	at org.h2.command.Parser.parseColumn(Parser.java:1171)
	at org.h2.command.Parser.parseColumnList(Parser.java:1156)
	at org.h2.command.Parser.parseInsert(Parser.java:1530)
	at org.h2.command.Parser.parsePrepared(Parser.java:698)
	at org.h2.command.Parser.parse(Parser.java:581)
	at org.h2.command.Parser.parse(Parser.java:556)
	at org.h2.command.Parser.prepareCommand(Parser.java:484)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:645)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:561)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1164)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:245)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:231)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:261)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:54)
	at org.springframework.boot.jdbc.init.DataSourceScriptDatabaseInitializer.runScripts(DataSourceScriptDatabaseInitializer.java:87)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.runScripts(AbstractScriptDatabaseInitializer.java:146)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applyScripts(AbstractScriptDatabaseInitializer.java:108)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applyDataScripts(AbstractScriptDatabaseInitializer.java:102)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.initializeDatabase(AbstractScriptDatabaseInitializer.java:77)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.afterPropertiesSet(AbstractScriptDatabaseInitializer.java:66)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1859)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1808)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:970)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.carsmoviesinventory.app.AppApplication.main(AppApplication.java:10)
2025-05-28 03:52:22.326200Z jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Column "FLORESNAME" not found; SQL statement:
INSERT INTO FLORES_ENTITI (id, floresName, floresColor, tamano) VALUES ('b27c5501-1fbb-47cd-b02e-1cb0f34daae9', 'Rosa', 'Rojo', 'Mediano'), ('6f63127c-5609-4b58-957d-b1c2308df7f3', 'Tulipán', 'Amarillo', 'Pequeño'), ('9391e6f9-bd08-4179-b28f-d207a1a72e5f', 'Lirio', 'Blanco', 'Grande'), ('7cf94f57-1457-49fd-b95b-429197c66fbb', 'Girasol', 'Amarillo', 'Grande'), ('53d4fdfe-42ac-488b-9be7-b053c848b883', 'Orquídea', 'Morado', 'Pequeño'), ('fcd95399-7c68-4318-a63d-905727e91b83', 'Jazmín', 'Blanco', 'Mediano'), ('eb1717fa-3d28-4a97-9df2-d2b013d30d26', 'Clavel', 'Rojo', 'Mediano'), ('2200e0be-c575-4f9a-9448-9931c0784881', 'Violeta', 'Azul', 'Pequeño'), ('8030286f-31b7-44d5-99a7-b5221a11c2a3', 'Dalia', 'Rosa', 'Grande'), ('1b8a8cc1-58f0-43f4-94f4-c52d6802d0e2', 'Margarita', 'Blanco', 'Mediano'), ('7ffcd0c7-e0a1-46b8-946f-96b3adf85e8d', 'Amapola', 'Rojo', 'Pequeño'), ('9b5b8a74-50d5-490f-9bba-e1fe210cf063', 'Gerbera', 'Naranja', 'Mediano'), ('e839ec88-3271-4704-b240-b07eced92c1a', 'Magnolia', 'Blanco', 'Grande'), ('dc3a93c4-fecb-46fd-928b-d2f6ed3b62d1', 'Hibisco', 'Rojo', 'Grande'), ('a5ac28bc-c56f-49a7-87f5-9e70612b2782', 'Petunia', 'Violeta', 'Pequeño'), ('bcf17e93-f1c6-4974-bbfc-929820f63245', 'Azucena', 'Blanco', 'Grande'), ('7f9f8d12-9b98-42a5-bbba-fc6635f17a5e', 'Gardenia', 'Blanco', 'Mediano'), ('935d3b4b-c8e5-4e9f-8bc5-cbf16ff6fae5', 'Amarilis', 'Rojo', 'Mediano'), ('10cfe28b-9df7-40ad-a6b7-d4c56c268c94', 'Lentejuela', 'Rosa', 'Pequeño'), ('41398ad1-e631-47ac-bb7e-264cbf4c2a75', 'Crisantemo', 'Amarillo', 'Mediano'), ('35753a38-9f5b-4bde-b22e-dcb563e16bbf', 'Cempasúchil', 'Naranja', 'Mediano'), ('f3d4e763-2e30-4067-9503-68e2f87fa3cd', 'Anémona', 'Rosa', 'Pequeño'), ('ab2f6ec0-9539-4e52-b7a7-16f2c9c497db', 'Fresia', 'Amarillo', 'Pequeño'), ('a6887121-8d4a-4067-9f3a-ff0a9f7f6c75', 'Lupino', 'Morado', 'Grande'), ('7d22b500-73e1-42c6-a3e2-c7e055063590', 'Geranios', 'Rosa', 'Mediano'), ('eaf35b94-0a8a-4923-a5c5-447f365470e7', 'Flor de Cempasúchil', 'Naranja', 'Mediano'), ('9d13b149-96a3-42e7-9e90-b8f946698d77', 'Buganvilla', 'Fucsia', 'Grande'), ('348fa45f-bfd0-4fdd-8281-5d8772f8f8ad', 'Ranúnculo', 'Blanco', 'Mediano'), ('cb9f989e-4a76-4757-96ca-9c72eab19c5d', 'Poppy', 'Rojo', 'Pequeño'), ('1778ac7f-b869-4d5c-9790-77e8a6c30ff5', 'Narciso', 'Amarillo', 'Pequeño'), ('e5f03c5c-049a-4e8b-8e4c-ccd3a264f935', 'Ciclamen', 'Rosa', 'Mediano'), ('b32b0e44-cd86-4ac7-b5c0-2cce68ed4a6f', 'Malva', 'Violeta', 'Grande'), ('543d6c27-7599-4387-b5a9-8f3acfe3e2f4', 'Violeta africana', 'Morado', 'Pequeño'), ('e875a5d2-c977-416a-b9cf-d8f3213ed5e0', 'Lobelia', 'Azul', 'Pequeño'), ('b559e33c-050b-4a1c-bf79-b7f640c82c9e', 'Caléndula', 'Naranja', 'Pequeño'), ('19bb9b43-935b-48b2-9e0f-d06f7b4293db', 'Boca de dragón', 'Rosa', 'Mediano'), ('26b31787-929b-4191-9b8d-d66d04b698d9', 'Helecho', 'Verde', 'Grande'), ('8b611c42-5473-4bbf-b8a1-6c1b4697e5d9', 'Euforbia', 'Verde', 'Mediano'), ('d3cc2896-2297-4bc5-ae0f-cf5efb62539c', 'Campanula', 'Azul', 'Pequeño'), ('c09e4211-ef4c-465b-a3b3-272f0c056831', 'Zinnia', 'Amarillo', 'Mediano'), ('f702c585-bc4a-4e67-b2ea-e0efb4db67a6', 'Bellis', 'Blanco', 'Pequeño'), ('b20ae9c1-9c7d-44a6-800a-083e929a451d', 'Alhelí', 'Blanco', 'Mediano'), ('79590fd8-7fa5-433b-9830-1f1f6a682be0', 'Impatiens', 'Rojo', 'Pequeño') [42122-232]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.table.Table.getColumn(Table.java:786)
	at org.h2.command.Parser.parseColumn(Parser.java:1171)
	at org.h2.command.Parser.parseColumnList(Parser.java:1156)
	at org.h2.command.Parser.parseInsert(Parser.java:1530)
	at org.h2.command.Parser.parsePrepared(Parser.java:698)
	at org.h2.command.Parser.parse(Parser.java:581)
	at org.h2.command.Parser.parse(Parser.java:556)
	at org.h2.command.Parser.prepareCommand(Parser.java:484)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:645)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:561)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1164)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:245)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:231)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:261)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:54)
	at org.springframework.boot.jdbc.init.DataSourceScriptDatabaseInitializer.runScripts(DataSourceScriptDatabaseInitializer.java:87)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.runScripts(AbstractScriptDatabaseInitializer.java:146)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applyScripts(AbstractScriptDatabaseInitializer.java:108)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applyDataScripts(AbstractScriptDatabaseInitializer.java:102)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.initializeDatabase(AbstractScriptDatabaseInitializer.java:77)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.afterPropertiesSet(AbstractScriptDatabaseInitializer.java:66)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1859)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1808)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:970)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.carsmoviesinventory.app.AppApplication.main(AppApplication.java:10)
